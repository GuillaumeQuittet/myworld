(require 'package)
; list the packages you want
(setq package-list '(auto-complete auto-complete-c-headers autopair emmet-mode jedi multiple-cursors nlinum nlinum-relative omnisharp yasnippet))

; list the repositories containing them
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

; fetch the list of packages available 
(unless package-archive-contents
  (package-refresh-contents))

; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

; Load a beautiful theme
; (load-theme 'monokai t)

; Change the font
(add-to-list 'default-frame-alist '(font . "Source Code Pro-11" ))
(set-face-attribute 'default t :font "Source Code Pro-11")

; Disable menu bar, tool bar and scroll bar
(menu-bar-mode 0)
(tool-bar-mode 0)
(scroll-bar-mode 0)

; Highlight the current line
(global-hl-line-mode)

; Change TAB width
(setq-default c-basic-offset 4
              tab-width 4
              indent-tabs-mode t)
;; make tab key always call a indent command.
(setq-default tab-always-indent t)

;; make tab key call indent command or insert tab character, depending on cursor position
(setq-default tab-always-indent nil)

;; make tab key do indent first then completion.
(setq-default tab-always-indent 'complete)

; Word wrap at 80
(setq fill-column 80)
(setq text-mode-hook 'turn-on-auto-fill)
(setq default-major-mode 'text-mode)

(column-number-mode t)
(show-paren-mode 1)

; Replace 'yes or no' by 'y or n'
(defalias 'yes-or-no-p 'y-or-n-p)

; C#
;; Speed up auto-complete on mono drastically. This comes with the
;; downside that documentation is impossible to fetch.
(setq omnisharp-auto-complete-want-documentation nil)

; ORG MODE
(org-babel-do-load-languages
 'org-babel-load-languages '((C . t)
							 (java . t)
							 (python . t)
							 (sh . t)
							 ))
; BACKUP
(setq backup-directory-alist '(("." . "~/.emacs.d/backup"))
  backup-by-copying t    ; Don't delink hardlinks
  version-control t      ; Use version numbers on backups
  delete-old-versions t  ; Automatically delete excess backups
  kept-new-versions 20   ; how many of the newest versions to keep
  kept-old-versions 5    ; and how many of the old
  )

; TERMINAL 
; Completion
(add-hook 'term-mode-hook (lambda()
        (setq yas-dont-activate t)))

; =========================================================================
; PLUGINS
; =========================================================================

; AUTO-COMPLETE and AUTO-COMPLETE-C-HEADER
; Enable auto complete
(require 'auto-complete)
; Start the default config
(require 'auto-complete-config)
(ac-config-default)
; Enable snippet
(require 'yasnippet)
(yas-global-mode 1)
; C/C++ completition header
(defun my:ac-c-header-init()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/usr/lib/gcc/x86_64-linux-gnu/5/include"))
(add-hook 'c++-mode-hook 'my:ac-c-header-init)
(add-hook 'c-mode-hook 'my:ac-c-header-init)

; AUTOPAIR
(require 'autopair)
(autopair-global-mode)

; EMMET Mode
(require 'emmet-mode)
(add-hook 'sgml-mode-hook 'emmet-mode) ;; Auto-start on any markup modes
(add-hook 'css-mode-hook  'emmet-mode) ;; enable Emmet's css abbreviation.

; JEDI
; Use Python : install virtualenv on the computer first
(require 'jedi)
(autoload 'jedi:setup "jedi" nil t)
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:setup-keys t)
(setq jedi:complete-on-dot t)

; NLINUM
(require 'nlinum)
; To precalculate the line number width to avoid horizontal jumps on scrolling
;; Preset width nlinum
(add-hook 'nlinum-mode-hook
          (lambda ()
            (when nlinum-mode
              (setq nlinum--width
                    ;; works with the default `nlinum-format'
                    (length (number-to-string
                             (count-lines (point-min) (point-max)))))
                    ;; use this instead if your `nlinum-format' has one space
                    ;; (or other character) after the number
                    ;;(1+ (length (number-to-string
                    ;;             (count-lines (point-min) (point-max)))))
              (nlinum--flush))))
; NLINUM-RELATIVE
(require 'nlinum-relative)
(add-hook 'prog-mode-hook 'nlinum-relative-mode)
(setq nlinum-relative-redisplay-delay 0)      ;; delay
(setq nlinum-relative-current-symbol "->")      ;; or "" for display current line number
(setq nlinum-relative-offset 0)                 ;; 1 if you want 0, 2, 3...
